version: "3"
services:
  db:
    image: postgres:latest
    environment:
      POSTGRES_USER: ${DB_USERNAME}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_NAME}

  migrations:
    build: ./api/
    environment:
      DB_DIALECT: ${DB_DIALECT}
      DB_PORT: ${DB_PORT}
      DB_USERNAME: ${DB_USERNAME}
      DB_PASSWORD: ${DB_PASSWORD}
      DB_NAME: ${DB_NAME}
      DB_HOST: ${DB_HOST}
    depends_on:
      - db
    command: ["yarn", "migrate-and-seed"] # Run migrations using the "migrate" script

  mqttsender:
    build: ./MQTTConections/
    ports:
      - "3010:3010"
    environment:
      MQTT_HOST: ${MQTT_HOST}
      MQTT_PORT: ${MQTT_PORT}
      MQTT_USER: ${MQTT_USER}
      MQTT_PASSWORD: ${MQTT_PASSWORD}
      DB_USERNAME: ${DB_USERNAME}
      DB_PASSWORD: ${DB_PASSWORD}
      DB_NAME: ${DB_NAME}
      DB_HOST: ${DB_HOST}
    container_name: mqttsender
    networks:
      - app-network
    depends_on:
      - db
    command: ["yarn", "start"]
    volumes:
      - app-data:/app/data

  mqttreceiver:
    build: ./MQTTConections/
    environment:
      MQTT_HOST: ${MQTT_HOST}
      MQTT_PORT: ${MQTT_PORT}
      MQTT_USER: ${MQTT_USER}
      MQTT_PASSWORD: ${MQTT_PASSWORD}
      DB_USERNAME: ${DB_USERNAME}
      DB_PASSWORD: ${DB_PASSWORD}
      DB_NAME: ${DB_NAME}
      DB_HOST: ${DB_HOST}
    depends_on:
      - db
    command: ["node", "./src/mqtts/mqttReceiver.js"]
    volumes:
      - app-data:/app/data

networks:
  app-network:
    driver: bridge
    
volumes:
  app-data:
